{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodoId","onSelect","className","map","todo","id","cn","completed","title","type","onClick","TodoFilter","query","setQuery","setStatus","status","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onClose","useState","user","setUser","isUserLoading","setIsUserLoading","useEffect","userId","loadedUser","finally","href","name","App","setTodos","isTodosLoading","setIsTodosLoading","isTodoError","setIsTodoError","setSelectedTodoId","loadedTodos","catch","unselectedUser","useCallback","visibleTodos","useMemo","filteredByQuery","filter","toLowerCase","includes","filteredByStatus","selectedTodo","find","isNoFiltersResult","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9639da0d.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodoId: number;\n  onSelect: (todoId: number) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  onSelect,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => (\n        <tr\n          data-cy=\"todo\"\n          className=\"\"\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            <p className={cn({\n              'has-text-danger': !todo.completed,\n              'has-text-success': todo.completed,\n            })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelect(todo.id)}\n            >\n              <span className=\"icon\">\n                <i className={cn('far', {\n                  'fa-eye': selectedTodoId !== todo.id,\n                  'fa-eye-slash': selectedTodoId === todo.id,\n                })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { FC } from 'react';\n\ninterface Props {\n  query: string;\n  setQuery: (query: string) => void;\n  setStatus: (query: string) => void;\n  status: string;\n}\n\nexport const TodoFilter: FC<Props> = ({\n  query,\n  setQuery,\n  setStatus,\n  status,\n}) => {\n  const handleReset = () => {\n    setQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={(event) => setStatus(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={handleReset}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ninterface Props {\n  todo: Todo;\n  onClose: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClose }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isUserLoading, setIsUserLoading] = useState(false);\n\n  useEffect(() => {\n    setIsUserLoading(true);\n\n    getUser(todo.userId)\n      .then((loadedUser) => setUser(loadedUser))\n      .finally(() => setIsUserLoading(false));\n  }, [todo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <div\n            className=\"modal-card-title has-text-weight-medium\"\n            data-cy=\"modal-header\"\n          >\n            {`Todo #${todo.id}`}\n          </div>\n\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            type=\"button\"\n            className=\"delete\"\n            data-cy=\"modal-close\"\n            onClick={onClose}\n          />\n        </header>\n\n        <div className=\"modal-card-body\">\n          <p className=\"block\" data-cy=\"modal-title\">\n            {todo.title}\n          </p>\n\n          <p className=\"block\" data-cy=\"modal-user\">\n            {/* <strong className=\"has-text-success\">Done</strong> */}\n            <strong className=\"has-text-danger\">Planned</strong>\n\n            {' by '}\n            {isUserLoading || !user\n              ? <Loader />\n              : (\n                <a href=\"mailto:Sincere@april.biz\">\n                  {user.name}\n                </a>\n              )}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, {\n  useEffect,\n  useState,\n  useMemo,\n  useCallback,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isTodosLoading, setIsTodosLoading] = useState(false);\n  const [isTodoError, setIsTodoError] = useState(false);\n  const [query, setQuery] = useState('');\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [status, setStatus] = useState('All');\n\n  useEffect(() => {\n    setIsTodosLoading(true);\n\n    getTodos()\n      .then((loadedTodos) => setTodos(loadedTodos))\n      .catch(() => setIsTodoError(true))\n      .finally(() => setIsTodosLoading(false));\n  }, []);\n\n  const unselectedUser = useCallback(() => {\n    setSelectedTodoId(0);\n  }, []);\n\n  const visibleTodos = useMemo(() => {\n    const filteredByQuery = todos.filter((todo) => (\n      todo.title.toLowerCase().includes(query.toLowerCase())));\n\n    const filteredByStatus = filteredByQuery.filter((todo) => {\n      switch (status) {\n        case 'active':\n          return todo.completed === false;\n\n        case 'completed':\n          return todo.completed === true;\n\n        default:\n          return todo;\n      }\n    });\n\n    return filteredByQuery && filteredByStatus;\n  }, [query, todos, status]);\n\n  const selectedTodo = useMemo(() => {\n    return todos.find(todo => todo.id === selectedTodoId);\n  }, [selectedTodoId, todos]);\n\n  const isNoFiltersResult = query && !visibleTodos.length;\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                setStatus={setStatus}\n                status={status}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isTodosLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodoId={selectedTodoId}\n                    onSelect={setSelectedTodoId}\n                  />\n                )}\n\n              {isTodoError && (\n                <p>Something went wrong</p>\n              )}\n\n              {isNoFiltersResult && (\n                <p>No totd matched your filters</p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo\n        && <TodoModal todo={selectedTodo} onClose={unselectedUser} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}